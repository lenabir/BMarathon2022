--week 4 homework practies

-- seslect command 

select *
from dim_actor;
select *
from dim_genres;
select name,
actor_id 
from dim_actor;

--limit command

select name,
actor_id
from dim_actor
limit 15;

select movie_id,
description
from dim_movie;

select movie_id,
description
from dim_movie
limit 20;

--where clause practice 

select *
from dim_actor
where name = 'smith';

select *
from dim_movie 
where movie_id = '5';

--where with IN, NOT IN, Between

select * 
from dim_actor 
where actor_id in (2,4,5);

select * 
from dim_actor 
where actor_id not in (2,4,5);

select * 
from dim_actor 
where actor_id between 4 and 50;

select *
from dim_genres
where genres_name not in ('comedy');

--null values, it is not the same as zero, no values at all 

insert into dim_actor
values (126957, 'dbtm159', '125 west game', 'gangster', 'boy');

create database test_bi;
drop database test_bi;  
--only used to practice;

describe dim_country; 

alter table dim_country
add county varchar(50);

alter table dim_country 
drop county;

alter table dim_country 
modify country_name varchar(300);

select 
distinct name
from dim_actor;

--like

select*
from dim_actor 
where name like 'ro%';

-- temp names of the columns 

select *
from dim_country;

select country_name as "name_country"
from dim_country;
select country_name as "country_name"
from dim_country;

week 5 H/W 
Netflix:

1. Perform LEFT, RIGHT, UNION joins with your dataset
2. 
-- Find all movies and any imdb_scoring associated with those movies

Select dm.title, imdb_score
from dim_movie as dm
left join fact_movie as fm on fm.movie_id = dm.movie_id


3. Find all years and any associated movies names

select dm.release_year, title 
from dim_movie as dm
left join fact_movie as fm on fm.movie_id = dm.movie_id
group by title;

4. Present all unique movie IDs from dim movie and fact table

select movie_id from dim_movie
union 
select movie_id from fact_movie;

5. Calculate how many movies an each unique actor had

SELECT distinct name, COUNT(movie_id) FROM dim_actor
GROUP BY name


6. How many TV-Shows was released in 2020

select count(distinct fm.movie_id)
from fact_movie as fm
inner join dim_movie as dm on dm.movie_id = fm.movie_id
where dm.release_year = 2020;

select count(fm.movie_id)
from fact_movie as fm
inner join dim_movie as dm on dm.movie_id = fm.movie_id
where dm.release_year = 2020;

7. Present average tmdb popularity for each genres

select genres_name, avg(fm.tmdb_popularity)
from fact_movie as fm
inner join dim_genres as dg on dg.genres_id = fm.genres_id
group by dg.genres_name;

8. What is the percentage of movies in "GB" country

select count(fm.movie_id)
 from fact_movie as fm
 inner join dim_country as dc on dc.country_id = fm.country_id
inner join dim_movie as dm on dm.movie_id = fm.movie_id
where dc.country_name = 'GB';
